<label for="user_foto">Foto de Usuario:</label>
        <input type = "file" id="user_foto" name="user_foto">
        <% if (locals.errors && errors.user_foto) {%>
          <div class="mensaje-alerta"> 
            <%= errors.user_foto.msg %> 
          </div>
          <% } %>

          validaciones de la imagen en el register 

          DEL USERCONTROLLER

              /*register: (req, res) => {
        return res.render('register');
    },*/

    /*processRegister: (req, res) => {
        const resultValidation = validationResult (req);

        
        if (resultValidation.errors.length > 0) {
            return res.render('register', {
                //mapped covierte de un array en objetos
                errors: resultValidation.mapped(),
                oldData: req.body
            });
        }
       
        
    let userEnDB= User.findByField('user_email', req.body.user_email); 


    if (userEnDB) {
        return res.render('register', {
            errors: {
                user_email: {
                    msg: 'Email ya registrado'
                }
            },
            oldData: req.body
        });
    } 
    
    delete req.body.confirm_password
        let userACrear = {
            ...req.body,
            user_password: bcryptjs.hashSync(req.body.user_password, 10),
            user_foto: req.file.filename, 
        }

        //req.body.user_foto=req.file.filename;
        //console.log(req.body);
        //userModel.save(req.body);
        

        let userCreado = User.create(userACrear);

        return res.redirect ('/user/login');
    }, 
    */





     
FORMULARIO DE REGISTRO  
<label for="user_usuario">Usuario:</label>
        <input type="text" id="user_usuario" name="user_usuario">

<label for="confirm_password">Confirmar contrase√±a:</label>
        <input type="password" id="confirm_password" name="confirm_password">
        <% if (locals.errors && errors.confirm_password) {%>
          <div class="mensaje-alerta"> 
            <%= errors.confirm_password.msg %> 
          </div>
          <% } %>
FORMULARIO DE REGISTRO 





FORMULARIO DE EDICION DE PROD 
 <div class="form-nuevosProd">
      <label for="imagen">Imagen</label>
      <input type="file" value="<%- product.imagen %>" name="oldImagen" id="oldImagen"  multiple>
    </div>
    <div class="form-nuevosProd">
      <label for="categoria">Categoria</label>
      <select name="categoria" value="<%- product.categoria %>" id="categoria">
          <option value="Semillas">Semillas</option>
          <option value="Decoracion">Decoracion</option>
          <option value="Jardineria">Jardineria</option>
          <option value="Plantas-Artificiales">Plantas Artificiales</option>
          <option value="sustratos">Sustratos</option>
          <option value="Macetas">Macetas</option>
          <option value="Herramientas">Herramientas</option>
      </select>
    </div>
    FORMULARIO DE EDICION DE PROD 

?product.precio.slice(1):''
upload.single('oldImagen')


nuevosProd
 <div class="form-nuevosProd">
      <label for="image">Imagen</label>
      <input type="file"  name="imagen" id="imagen"  multiple>
    </div>
    






    const resultValidation = validationResult(req);
        if (resultValidation.errors.length > 0) {
          return res.render("nuevosProd", {
            errors: resultValidation.mapped(),
            oldData: req.body,
          });
        }
        let productInDB = db.Products.findOne({
            where: {
                product: req.body.producto,
            },
          })
          .then((product) => {
            if (product) {
              res.render("nuevosProd", {
                errors: {
                producto: {
                    msg: "Este producto ya se encuentra en la base de datos",
                  },
                },
              });
            }
          })
          .catch((err) => console.log(err));




           <!--<select name="categoria" <%= locals.errors && errors.categoria? 'is-invalid' : null %>>
        <option selected="" disabled selected> Categorias</option>
        <% cate.forEach(category => { %>
        <option value="<%= category.product %>"
            <%= locals.oldData && (category.product === oldData.categoria)? 'selected' : null %> 
            ><%= category.product %></option>
        <% }); %>
    </select>
    </div>-->